{
  "hash": "144913d55abe9857b8c500fa8b0e74e3",
  "result": {
    "markdown": "---\ntitle: \"E-commerce 데이터 분석 (2)\"\ndescription: |\n  Data Mart 구성 및 Feature Engineering\ndate: 2023-12-08\ncategories: [machine learning, statistics]\nimage: ecommerce2.png\npreview-links: true\nexecute: \n  cache: true\neditor_options: \n  chunk_output_type: console\n---\n\n\n\n\n\n본 포스팅은 패스트캠퍼스 [50개 프로젝트로 완벽하게 끝내는 머신러닝 시그니쳐](https://fastcampus.co.kr/data_online_msignature)의 강의내용을 바탕으로 참고하여 작성하였습니다.\n\n앞서 [E-commerce 데이터 분석 (1)](https://gwook.blog/blog/2023-12-03-ecommerce-data-analysis/)에서 A사가 운영하는 이커머스 플랫폼의 ②유입 고객 재구매를 촉진시키기 위해 7단계의 문제해결 프로세스를 정의했으며, Step 5의 데이터 분석 단계에 필요한 과정을 진행했습니다.\n\n# 03. Data Mart & Feature Engineering {#sec-3}\n\n## 03-01. Data Mart 기획 및 설계\n\n![모델링을 위한 Data Mart 기획](data-mart.png)\n\n\n::: {.cell hash='index_cache/html/unnamed-chunk-1_08e65167ea0d5663cd79ed091b0ea576'}\n\n:::\n\n\n고객 24,983명에 대한 거래 이력이 총 78만 건 정도였고, 이를 고객 데이터셋을 Undersampling 하여 추출한 분석 대상이 7,495명의 고객 데이터인 상황입니다. UCI Machine Learning Repository의 Online Retail 데이터를 Data Warehouse에서 가져온 데이터이고, 이를 이용해 고객별 구매 이력에 대한 Data Mart를 구성하려고 합니다. 이제 여러 가설을 세워 재구매 여부 `target`에 영향을 미치는 여러 변수(features)를 만들어 보겠습니다. 아래는 Data Mart를 구성하는 여러 feature 에 대한 설명과 로직이 작성되어 있는 Data Mart 기획서입니다.\n\n![Data Mart 기획서](data-mart-desc.png){#fig-1 fig-align=\"center\"}\n\n## 03-02. Data 추출 및 Mart 개발\n\n기본적인 전처리가 끝난 후 데이터를 `df_origin`로 저장되어 있습니다. 샘플링한 표본 데이터를 대상으로 Mart를 구성하기 위해서, 우선 `df_origin`과 표본 데이터 `df_all_sample`에 `bsym`과 `CustomerID`를 조합해 key 변수를 만들어 보겠습니다.\n\n\n::: {.cell hash='index_cache/html/unnamed-chunk-2_3f0299b26986d98aa87994610ac91f05'}\n\n```{.r .cell-code}\ndf_origin %>% head()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 9\n  InvoiceNo StockCode Description                           Quantity InvoiceDate         UnitPrice CustomerID Country        bsym   \n  <chr>     <chr>     <chr>                                    <int> <dttm>                  <dbl> <chr>      <chr>          <chr>  \n1 489434    85048     \"15CM CHRISTMAS GLASS BALL 20 LIGHTS\"       12 2009-12-01 07:45:00      6.95 13085      United Kingdom 2009-12\n2 489434    79323P    \"PINK CHERRY LIGHTS\"                        12 2009-12-01 07:45:00      6.75 13085      United Kingdom 2009-12\n3 489434    79323W    \"WHITE CHERRY LIGHTS\"                       12 2009-12-01 07:45:00      6.75 13085      United Kingdom 2009-12\n4 489434    22041     \"RECORD FRAME 7\\\" SINGLE SIZE\"              48 2009-12-01 07:45:00      2.1  13085      United Kingdom 2009-12\n5 489434    21232     \"STRAWBERRY CERAMIC TRINKET BOX\"            24 2009-12-01 07:45:00      1.25 13085      United Kingdom 2009-12\n6 489434    22064     \"PINK DOUGHNUT TRINKET POT\"                 24 2009-12-01 07:45:00      1.65 13085      United Kingdom 2009-12\n```\n:::\n\n```{.r .cell-code}\ndf_all_sample %>% head()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 3\n  bsym    CustomerID target\n  <chr>   <chr>       <dbl>\n1 2009-12 12682           1\n2 2009-12 15413           1\n3 2009-12 16321           0\n4 2009-12 15712           1\n5 2009-12 17700           1\n6 2009-12 14911           1\n```\n:::\n\n```{.r .cell-code}\n# df_origin에 key 변수 생성\ndf_origin <- df_origin %>% \n  mutate(key = str_c(bsym, CustomerID))\ndf_origin %>% \n  reframe(n_key = n_distinct(key))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 1\n  n_key\n  <int>\n1 25598\n```\n:::\n\n```{.r .cell-code}\n# df_all_sample에 key 변수 생성\ndf_all_sample <- df_all_sample %>% \n  mutate(key = str_c(bsym, CustomerID))\ndf_all_sample %>% \n  reframe(n_key = n_distinct(key))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 1\n  n_key\n  <int>\n1  7495\n```\n:::\n:::\n\n\n이제 `df_origin`의 `key`를 이용해 `df_all_sample`에 존재하는 행들만 가져와 `df_origin_sample` 이라는 데이터를 만듭니다.\n\n\n::: {.cell hash='index_cache/html/unnamed-chunk-3_3093076c4294c5149a459c5425618807'}\n\n```{.r .cell-code}\ndf_origin_sample <- df_origin %>% \n  filter(key %in% df_all_sample$key)\n\n# df_origin과 df_origin_sample의 비율: 대략 30% 정도\nnrow(df_origin_sample)/nrow(df_origin)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.2947758\n```\n:::\n:::\n\n\n### Mart 구성 \n\n#### **구매금액**\n\n- Idea: 월별 구매금액에 따라 다음 달 재구매 확률이 다를 것이다\n\nMart 기획서의 첫 번째 **구매금액** 관련 3개의 변수를 만들기 위해 `StockCode` 당 구매금액을 나타내는 변수 `amt`를 `UnitPrice * Quantity`로 정의하겠습니다.\n\n\n::: {.cell hash='index_cache/html/unnamed-chunk-4_d40af0b512c611c1c59f7faad1646fee'}\n\n```{.r .cell-code}\n# 1. 구매금액 amt 관련 변수 , max_amt, min_amt\n## 1) total_amt: 당월 총 구매금액\ndf_mart <- df_origin_sample %>%\n  mutate(amt = UnitPrice * Quantity) %>% \n  group_by(bsym, CustomerID) %>% \n  reframe(total_amt = sum(amt, na.rm = T))\n\n## 2) max_amt, min_amt: 당월 송장당 최대/최소 구매금액\ndf_mart <- df_mart %>% left_join(\n  df_origin_sample %>% \n  mutate(amt = UnitPrice * Quantity) %>% \n  group_by(bsym, CustomerID, InvoiceNo) %>% \n  reframe(amt = sum(amt, na.rm = T)) %>% \n  group_by(bsym, CustomerID) %>% \n  reframe(max_amt = max(amt, na.rm = T),\n          min_amt = min(amt, na.rm = T)),\n  by = c(\"bsym\", \"CustomerID\")\n)\n\ndf_mart %>% head()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 5\n  bsym    CustomerID total_amt max_amt min_amt\n  <chr>   <chr>          <dbl>   <dbl>   <dbl>\n1 2009-12 12437          578.    578.    578. \n2 2009-12 12523           74.6    74.6    74.6\n3 2009-12 12539         5149.   2583.   2566. \n4 2009-12 12557         1953.   1953.   1953. \n5 2009-12 12664          549.    549.    549. \n6 2009-12 12681         1015.   1015.   1015. \n```\n:::\n:::\n\n\n#### **구매건수**\n\n- Idea: 월별 구매건수에 따라 다음 달 재구매 확률이 다를 것이다\n\n이제 구매건수(`cnt`)와 관련된 변수 3가지를 만들겠습니다. 월별 총 구매건수는 `total_cnt`로, 월별 송장(`InvoiceNo`)별 구매 품목 수의 최대/최소는 `max_cnt`, `min_cnt`로 정의하겠습니다.\n\n\n::: {.cell hash='index_cache/html/unnamed-chunk-5_e2af5e531eae8bbec9a6e977b3083b4d'}\n\n```{.r .cell-code}\n# 2. 구매건수 cnt 관련 변수\n## 1) total_cnt: 당월 총 구매건수\ndf_mart <- df_mart %>% left_join(\n  df_origin_sample %>% \n  group_by(bsym, CustomerID) %>% \n  reframe(total_cnt = n_distinct(InvoiceNo)),\n  by = c(\"bsym\", \"CustomerID\")\n)\n## 2) max_cnt, min_cnt: InvoiceNo별 최대/최소 구매 품목 수\ndf_mart <- df_mart %>% \n  left_join(\n    df_origin_sample %>% \n      group_by(bsym, CustomerID, InvoiceNo) %>% \n      reframe(cnt = n_distinct(StockCode)) %>% \n      group_by(bsym, CustomerID) %>% \n      reframe(max_cnt = max(cnt, na.rm = T),\n              min_cnt = min(cnt, na.rm = T)),\n    by = c(\"bsym\", \"CustomerID\")\n  )\n\n\ndf_mart %>% head()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 8\n  bsym    CustomerID total_amt max_amt min_amt total_cnt max_cnt min_cnt\n  <chr>   <chr>          <dbl>   <dbl>   <dbl>     <int>   <int>   <int>\n1 2009-12 12437          578.    578.    578.          1      27      27\n2 2009-12 12523           74.6    74.6    74.6         1       4       4\n3 2009-12 12539         5149.   2583.   2566.          2     104     103\n4 2009-12 12557         1953.   1953.   1953.          1       3       3\n5 2009-12 12664          549.    549.    549.          1       4       4\n6 2009-12 12681         1015.   1015.   1015.          1      46      46\n```\n:::\n:::\n\n\n#### **구매수량**\n\n\n- Idea: 월별 구매수량에 따라 다음 달 재구매 확률이 다를 것이다\n\n\n::: {.cell hash='index_cache/html/unnamed-chunk-6_775b6d9fa64bc0af10bb3ee7ea7f68ab'}\n\n```{.r .cell-code}\n# 3. 구매수량 qty 관련 변수\n## 1) total_qty: 당월 총 구매수량\ndf_mart <- df_mart %>% left_join(\n  df_origin_sample %>% \n    group_by(bsym, CustomerID) %>% \n    reframe(total_qty = sum(Quantity, na.rm = T),\n            max_qty = max(Quantity, na.rm = T),\n            min_qty = min(Quantity, na.rm = T)),\n  by = c(\"bsym\", \"CustomerID\")\n)\n```\n:::\n\n::: {.cell hash='index_cache/html/unnamed-chunk-7_a6438fa461af98865a157fb911debf35'}\n\n```{.r .cell-code}\ndf_mart\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 7,495 × 11\n   bsym    CustomerID total_amt max_amt min_amt total_cnt max_cnt min_cnt total_qty max_qty min_qty\n   <chr>   <chr>          <dbl>   <dbl>   <dbl>     <int>   <int>   <int>     <int>   <int>   <int>\n 1 2009-12 12437          578.    578.    578.          1      27      27       263      24       3\n 2 2009-12 12523           74.6    74.6    74.6         1       4       4        62      36       4\n 3 2009-12 12539         5149.   2583.   2566.          2     104     103      2128      48       2\n 4 2009-12 12557         1953.   1953.   1953.          1       3       3       576     216     144\n 5 2009-12 12664          549.    549.    549.          1       4       4       134      72       2\n 6 2009-12 12681         1015.   1015.   1015.          1      46      46       650      72       1\n 7 2009-12 12682         1073.    508.    139.          3      19       9       415      25       1\n 8 2009-12 12709         1413.   1197.    216           2      17       1       363      36       1\n 9 2009-12 12712          334.    334.    334.          1      21      21       196      25       2\n10 2009-12 12747         1032     381.    303.          3      12       4       204      48       1\n# ℹ 7,485 more rows\n```\n:::\n:::\n\n\n\n#### **국적**\n\n- Idea: 국적에 따라 재구매 확률이 다를 것이다\n\n\n::: {.cell hash='index_cache/html/unnamed-chunk-8_dab11cbc45feed8e5819e1e6850aee2e'}\n\n```{.r .cell-code}\n# 4. 국적 변수 생성\ndf_mart <- df_mart %>% left_join(\n  df_origin_sample %>% \n    group_by(bsym, CustomerID) %>% \n    reframe(Country = first(Country)),\n  by = c(\"bsym\", \"CustomerID\")\n)\ndf_mart %>% head()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 12\n  bsym    CustomerID total_amt max_amt min_amt total_cnt max_cnt min_cnt total_qty max_qty min_qty Country\n  <chr>   <chr>          <dbl>   <dbl>   <dbl>     <int>   <int>   <int>     <int>   <int>   <int> <chr>  \n1 2009-12 12437          578.    578.    578.          1      27      27       263      24       3 France \n2 2009-12 12523           74.6    74.6    74.6         1       4       4        62      36       4 France \n3 2009-12 12539         5149.   2583.   2566.          2     104     103      2128      48       2 Spain  \n4 2009-12 12557         1953.   1953.   1953.          1       3       3       576     216     144 Spain  \n5 2009-12 12664          549.    549.    549.          1       4       4       134      72       2 Finland\n6 2009-12 12681         1015.   1015.   1015.          1      46      46       650      72       1 France \n```\n:::\n:::\n\n\n#### **구매 시간대**\n\n- Idea: 구매 시간대(아침, 점심, 저녁, 밤)에 따라 재구매 확률이 다를 것이다\n\n월별 고객별 아침, 점심, 저녁, 밤에 따른 구매 빈도를 구한 후 가장 많은 시간대를 `peak_time`이라는 이름의 feature로 선택하겠습니다.\n\n\n::: {.cell hash='index_cache/html/unnamed-chunk-9_91c95aadaa707bb327155b4614106440'}\n\n```{.r .cell-code}\n# 5. 구매 시간대(아침, 점심, 저녁, 밤)\n## 아침: 6~12시, 점심: 12~18시, 저녁: 18~24시, 밤: 0~6시\n## 시간대별 구매 빈도 계산\ndf_mart <- df_mart %>% left_join(\n  df_origin_sample %>% \n    mutate(hour = hour(InvoiceDate),\n           peak_time = case_when(\n             hour >= 6  & hour < 12 ~ \"Morning\",\n             hour >= 12 & hour < 18 ~ \"Afternoon\",\n             hour >= 18 & hour < 24 ~ \"Evening\",\n             TRUE ~ \"Night\"\n           )) %>% \n    group_by(bsym, CustomerID, peak_time) %>% \n    reframe(purchase_cnt = n()) %>% \n    group_by(bsym, CustomerID) %>% \n    slice_max(purchase_cnt, n = 1, with_ties = FALSE) %>% \n    select(-purchase_cnt) %>% \n    ungroup(),\n  by = c(\"bsym\", \"CustomerID\")\n)\ndf_mart %>% head()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 13\n  bsym    CustomerID total_amt max_amt min_amt total_cnt max_cnt min_cnt total_qty max_qty min_qty Country peak_time\n  <chr>   <chr>          <dbl>   <dbl>   <dbl>     <int>   <int>   <int>     <int>   <int>   <int> <chr>   <chr>    \n1 2009-12 12437          578.    578.    578.          1      27      27       263      24       3 France  Afternoon\n2 2009-12 12523           74.6    74.6    74.6         1       4       4        62      36       4 France  Afternoon\n3 2009-12 12539         5149.   2583.   2566.          2     104     103      2128      48       2 Spain   Afternoon\n4 2009-12 12557         1953.   1953.   1953.          1       3       3       576     216     144 Spain   Morning  \n5 2009-12 12664          549.    549.    549.          1       4       4       134      72       2 Finland Morning  \n6 2009-12 12681         1015.   1015.   1015.          1      46      46       650      72       1 France  Afternoon\n```\n:::\n:::\n\n\n#### **계절**\n\n- Idea: 계절에 따라 재구매 확률이 다를 것이다\n\n\n::: {.cell hash='index_cache/html/unnamed-chunk-10_034f8168414b192e923e315a54453a00'}\n\n```{.r .cell-code}\n# 6. 계절 변수 추가\ndf_mart <- df_mart %>% left_join(\n  df_origin_sample %>% \n    mutate(month = month(InvoiceDate),\n           season = case_when(\n             month %in% c(3,4,5) ~ \"Spring\",\n             month %in% c(6,7,8) ~ \"Summer\",\n             month %in% c(9,10,11) ~ \"Autumn\",\n             TRUE ~ \"Winter\"\n           )) %>% \n    group_by(bsym, CustomerID) %>% \n    reframe(season = first(season)),\n  by = c(\"bsym\", \"CustomerID\")\n)\ndf_mart %>% head()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 14\n  bsym    CustomerID total_amt max_amt min_amt total_cnt max_cnt min_cnt total_qty max_qty min_qty Country peak_time season\n  <chr>   <chr>          <dbl>   <dbl>   <dbl>     <int>   <int>   <int>     <int>   <int>   <int> <chr>   <chr>     <chr> \n1 2009-12 12437          578.    578.    578.          1      27      27       263      24       3 France  Afternoon Winter\n2 2009-12 12523           74.6    74.6    74.6         1       4       4        62      36       4 France  Afternoon Winter\n3 2009-12 12539         5149.   2583.   2566.          2     104     103      2128      48       2 Spain   Afternoon Winter\n4 2009-12 12557         1953.   1953.   1953.          1       3       3       576     216     144 Spain   Morning   Winter\n5 2009-12 12664          549.    549.    549.          1       4       4       134      72       2 Finland Morning   Winter\n6 2009-12 12681         1015.   1015.   1015.          1      46      46       650      72       1 France  Afternoon Winter\n```\n:::\n:::\n\n\n\n#### **구매 빈도**\n\n- Idea: 구매 빈도가 높은 고객은 재구매 확률이 높을 것이다\n\n\n::: {.cell hash='index_cache/html/unnamed-chunk-11_9508975d0f6e6e4ec4115b294e38a5b0'}\n\n```{.r .cell-code}\n# 7. 당월 구매 빈도\n## freq = count(InvoiceNo) / # num of days in month\ndf_mart <- df_mart %>% left_join(\n  df_origin_sample %>% \n    group_by(bsym, CustomerID) %>% \n    reframe(cnt = n_distinct(InvoiceNo)) %>% \n    mutate(\n      tmp_date = as.Date(paste0(bsym, \"-01\")),\n      days = as.integer(day(floor_date(tmp_date + months(1), \"month\") - 1)),\n      freq = cnt / days\n    ) %>% \n    select(-c(cnt, tmp_date, days)),\n  by = c(\"bsym\", \"CustomerID\")\n)\n\ndf_mart %>% head()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 15\n  bsym    CustomerID total_amt max_amt min_amt total_cnt max_cnt min_cnt total_qty max_qty min_qty Country peak_time season   freq\n  <chr>   <chr>          <dbl>   <dbl>   <dbl>     <int>   <int>   <int>     <int>   <int>   <int> <chr>   <chr>     <chr>   <dbl>\n1 2009-12 12437          578.    578.    578.          1      27      27       263      24       3 France  Afternoon Winter 0.0323\n2 2009-12 12523           74.6    74.6    74.6         1       4       4        62      36       4 France  Afternoon Winter 0.0323\n3 2009-12 12539         5149.   2583.   2566.          2     104     103      2128      48       2 Spain   Afternoon Winter 0.0645\n4 2009-12 12557         1953.   1953.   1953.          1       3       3       576     216     144 Spain   Morning   Winter 0.0323\n5 2009-12 12664          549.    549.    549.          1       4       4       134      72       2 Finland Morning   Winter 0.0323\n6 2009-12 12681         1015.   1015.   1015.          1      46      46       650      72       1 France  Afternoon Winter 0.0323\n```\n:::\n:::\n\n\n#### **평균 구매금액**\n\n- Idea: 평균 구매금액에 따라 재구매 확률이 다를 것이다\n\n이 변수는 단순히 `total_amt`를 `total_cnt`로 나눈 값입니다.\n\n\n::: {.cell hash='index_cache/html/unnamed-chunk-12_26480d6700248a18a532d7efee5c7113'}\n\n```{.r .cell-code}\n# 8. 평균 구매금액: avg_amt\n## 송장당 평균 구매금액\ndf_mart <- df_mart %>% \n  mutate(avg_amt = total_amt / total_cnt)\n\ndf_mart %>% head()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 16\n  bsym    CustomerID total_amt max_amt min_amt total_cnt max_cnt min_cnt total_qty max_qty min_qty Country peak_time season   freq avg_amt\n  <chr>   <chr>          <dbl>   <dbl>   <dbl>     <int>   <int>   <int>     <int>   <int>   <int> <chr>   <chr>     <chr>   <dbl>   <dbl>\n1 2009-12 12437          578.    578.    578.          1      27      27       263      24       3 France  Afternoon Winter 0.0323   578. \n2 2009-12 12523           74.6    74.6    74.6         1       4       4        62      36       4 France  Afternoon Winter 0.0323    74.6\n3 2009-12 12539         5149.   2583.   2566.          2     104     103      2128      48       2 Spain   Afternoon Winter 0.0645  2575. \n4 2009-12 12557         1953.   1953.   1953.          1       3       3       576     216     144 Spain   Morning   Winter 0.0323  1953. \n5 2009-12 12664          549.    549.    549.          1       4       4       134      72       2 Finland Morning   Winter 0.0323   549. \n6 2009-12 12681         1015.   1015.   1015.          1      46      46       650      72       1 France  Afternoon Winter 0.0323  1015. \n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}